Description: Upstream changes introduced in version 0.9-1~lucidubuntu3
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 bumblebee-ui (0.9-1~lucidubuntu3) lucid; urgency=low
 .
   * Renamed ecoptirun to optirun in project...
 .
 The person named in the Author field signed this changelog entry.
Author: Martin Juhl (MrMEEE) <mj@casalogic.dk>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- bumblebee-ui-0.9.orig/bumblebee-indicator
+++ bumblebee-ui-0.9/bumblebee-indicator
@@ -116,7 +116,7 @@ class BumblebeeIndicator():
     def update_menu(self, widget=None):	
         self.pref_menu=gtk.Menu()
         subitem = gtk.MenuItem("Glxgears")
-        subitem.connect("activate", self.call_app, ['ecoptirun', 'glxgears'])
+        subitem.connect("activate", self.call_app, ['optirun', 'glxgears'])
         subitem.show()
         self.pref_menu.append(subitem)
 	file_set.get_configured_from_cfg()
--- bumblebee-ui-0.9.orig/app/DesktopFile.py
+++ bumblebee-ui-0.9/app/DesktopFile.py
@@ -193,8 +193,8 @@ class DesktopFile:
 
 	def get_exec_config(self, Exec, i=-1, 
 				case={'-32':set_true, '-f':set_true, '-c':get_compression},
-				skip=['ecoptirun', 'optirun', '-d', ':0', ':1', ':2'] + Config.compression_list):
-		"""Function to search for configuration inside ecoptirun arguments in the desktop file object : 
+				skip=['optirun', 'optirun', '-d', ':0', ':1', ':2'] + Config.compression_list):
+		"""Function to search for configuration inside optirun arguments in the desktop file object : 
 		Force_eco, 32bits, Compression"""	
 
 		arg_list=re.split(' ',Exec)	
@@ -233,7 +233,7 @@ class DesktopFile:
 		Exec = self.config.get('Desktop Entry', 'Exec')
 		#TODO Check if this is really needed
 		#self.config.set('Desktop Entry','OnlyShowIn','GNOME;Unity;")
-		self.add_shortcut_section('BumblebeeDisable Shortcut Group', 'Launch with Bumblebee', 'ecoptirun -f ' + Exec) #Default setting is optional and forced
+		self.add_shortcut_section('BumblebeeDisable Shortcut Group', 'Launch with Bumblebee', 'optirun -f ' + Exec) #Default setting is optional and forced
 		self.add_shortcut_section('BumblebeeEnable Shortcut Group', 'Launch without Bumblebee', Exec)
 		self.write_config_to_file(Config.user_desktop_file_directory + self.file_name_with_extension)
 		if self.local == False: os.chmod(Config.user_desktop_file_directory + self.file_name_with_extension,0755)
@@ -285,16 +285,16 @@ class DesktopFile:
 ###FUNCTIONS TO CONFIGURE THE EXECUTION OF THE APPLICATION		
 	
 	def set_exec_config(self, mode, bits32, compression):
-		"""Function to set the option for ecoptirun : default, 32 bits, on battery, compression"""
+		"""Function to set the option for optirun : default, 32 bits, on battery, compression"""
 		option=''
 		if bits32==True: option+='-32 '
 		if not (compression == "default" or compression == Config.default_compression) : option+='-c '+ compression + ' '
 		clean_exec= self.config.get('BumblebeeEnable Shortcut Group','Exec')
-		self.config.set('BumblebeeDisable Shortcut Group','Exec','ecoptirun -f ' + option + clean_exec)
+		self.config.set('BumblebeeDisable Shortcut Group','Exec','optirun -f ' + option + clean_exec)
 		if mode == Config.mode_keys['perf']: 
-			self.set_exec_config_default('ecoptirun -f ' + option + clean_exec, 'BumblebeeDisable', 'BumblebeeEnable')
+			self.set_exec_config_default('optirun -f ' + option + clean_exec, 'BumblebeeDisable', 'BumblebeeEnable')
 		elif mode == Config.mode_keys['eco']: 
-			self.set_exec_config_default('ecoptirun ' + option + clean_exec, 'BumblebeeEnable', 'BumblebeeDisable')
+			self.set_exec_config_default('optirun ' + option + clean_exec, 'BumblebeeEnable', 'BumblebeeDisable')
 		else: 
 			self.set_exec_config_default(clean_exec, 'BumblebeeEnable', 'BumblebeeDisable')
 		self.write_config_to_file(self.file_path)
